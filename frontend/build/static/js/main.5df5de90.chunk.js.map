{"version":3,"sources":["components/Footer.js","components/Header.js","constants/mileageDisengageConstants.js","actions/listMileageDisengageActions.js","components/Mileage.js","components/Disengage.js","components/MileageDisengage.js","constants/collisionsConstants.js","components/Loading.js","components/Collision.js","actions/collisionActions.js","screens/LandingPage/LandingPage.js","constants/techStacksConstants.js","constants/suggestionsConstants.js","components/ErrorMessage.js","components/Suggestion.js","actions/updateSuggestionActions.js","screens/TechStack/TechStack.js","actions/techStackActions.js","App.js","reportWebVitals.js","store.js","reducers/techStacksReducers.js","reducers/collisionsReducers.js","reducers/mileageDisengagementReducers.js","reducers/suggestionReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","Header","setSearch","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","Nav","Link","MILEAGEDISENGAGE_LIST_REQUEST","MILEAGEDISENGAGE_LIST_SUCCESS","MILEAGEDISENGAGE_LIST_FAIL","listMileageDisengage","dispatch","getState","a","type","mileage","disengage","axios","get","mileData","console","log","mileageDisengage","data","compound","compoundDisengage","i","length","year","j","spreading","spreadingDisengage","disengagements","Object","values","keys","push","payload","payloadDisengage","message","response","Mileage","useDispatch","useSelector","state","mileageDisengageList","theKeys","newKeys","colorArray","filter","item","map","elem","concat","Set","theKey","color","useEffect","ResponsiveContainer","height","LineChart","margin","top","right","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","Disengage","disengagement","MileageDisengage","mileageDisengagementList","mileageDisengagements","tempObj","len","k","m","milesPerDis","isNaN","toFixed","COLLISIONS_LIST_REQUEST","COLLISIONS_LIST_SUCCESS","COLLISIONS_LIST_FAIL","Loading","size","alignItems","Spinner","animation","Collision","collisionList","loading","collisions","useState","numberOfCollisions","setNumberOfCollisions","dataSorted","sort","b","aa","parseInt","accidentDate","split","slice","window","innerWidth","fluid","Table","responsive","tableHeader","index","col","company","splice","description","mode","damage","_id","Button","onClick","LandingPage","history","TECHSTACKS_LIST_REQUEST","TECHSTACKS_LIST_SUCCESS","TECHSTACKS_LIST_FAIL","SUGGESTION_UPDATE_REQUEST","SUGGESTION_UPDATE_SUCCESS","SUGGESTION_UPDATE_FAIL","ErrorMessage","children","Alert","fontSize","Suggestion","techStacks","techStackList","setType","currentOption","find","stck","showSuggestion","setShowSuggestion","suggestionError","setSuggestionError","setParticipant","setModel","lidar","setLidar","camera","setCamera","radar","setRadar","level","setLevel","compute","setCompute","providingService","setProvidingService","source","setSource","suggestionUpdate","suggestions","suggestion","options","stack","option","participant","model","resetHandler","replace","Card","text","Body","Form","onSubmit","e","preventDefault","config","headers","Authorization","post","updateSuggestionAction","Label","Control","as","value","onChange","target","opt","Group","controlId","disabled","placeholder","rows","Date","toLocaleDateString","TechStack","sm","f_stack","trim","f","point","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","error","success","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5df5de90.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">\n            Copyright &copy; Drive Automation\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\n\nimport {} from \"react-router-dom\";\n\nfunction Header({ setSearch }) {\n  //const dispatch = useDispatch();\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Driving Automation</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\"></Nav>\n          <Nav>\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/TechStack\">Tech Stack</Nav.Link>\n            {/* <Nav.Link href=\"/\">Pricing</Nav.Link> */}\n            {/* <Nav.Link href=\"/\">Polls</Nav.Link> */}\n            {/* <Nav.Link href=\"/\">Transition</Nav.Link> */}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","export const MILEAGEDISENGAGE_LIST_REQUEST = \"MILEAGEDISENGAGE_LIST_REQUEST\";\nexport const MILEAGEDISENGAGE_LIST_SUCCESS = \"MILEAGEDISENGAGE_LIST_SUCCESS\";\nexport const MILEAGEDISENGAGE_LIST_FAIL = \"MILEAGEDISENGAGE_LIST_FAIL\";","import {\n  MILEAGEDISENGAGE_LIST_FAIL,\n  MILEAGEDISENGAGE_LIST_REQUEST,\n  MILEAGEDISENGAGE_LIST_SUCCESS,\n} from \"../constants/mileageDisengageConstants\";\nimport axios from \"axios\";\n\nexport const listMileageDisengage = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MILEAGEDISENGAGE_LIST_REQUEST,\n    });\n    let mileage = [];\n    let disengage = [];\n    const mileData = await axios.get(`/api/mileageDisengage`);\n    console.log(\"here\");\n    console.log(mileData);\n    let mileageDisengage = mileData.data;\n\n    let compound = {};\n    let compoundDisengage = {};\n    for (let i = 0; i < mileageDisengage.length; i++) {\n      compound = {};\n      compoundDisengage = {};\n      compound.year = mileageDisengage[i].year;\n      compoundDisengage.year = mileageDisengage[i].year;\n      //console.log(mileageDisengage[i].disengagements)\n      for (let j = 0; j < mileageDisengage[i].mileage.length; j++) {\n        let spreading = mileageDisengage[i].mileage[j];\n        let spreadingDisengage = mileageDisengage[i].disengagements[j];\n        if (Object.values(spreading)[0] > 350) {\n          compound[Object.keys(spreading)[0]] = Object.values(spreading)[0];\n          compoundDisengage[Object.keys(spreadingDisengage)[0]] =\n            Object.values(spreadingDisengage)[0];\n        }\n      }\n      mileage.push(compound);\n      disengage.push(compoundDisengage);\n    }\n    // console.log(mileage)\n    // console.log(disengage)\n    dispatch({\n      type: MILEAGEDISENGAGE_LIST_SUCCESS,\n      payload: mileage,\n      payloadDisengage: disengage,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MILEAGEDISENGAGE_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport {\n  LineChart,\n  Line,\n  YAxis,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from \"recharts\";\nimport \"./Screen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listMileageDisengage } from \"../actions/listMileageDisengageActions\";\n\nconst Mileage = () => {\n  const dispatch = useDispatch();\n\n  const mileageDisengagementList = useSelector(\n    (state) => state.mileageDisengageList\n  );\n  const { mileageDisengage } = mileageDisengagementList;\n  //let mileage = []\n  //let [mileage, setMileage] = useState([]);\n  let theKeys = [];\n  let newKeys = [];\n  var colorArray = [\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n  ];\n  //console.log(mileageDisengage)\n  if (typeof mileageDisengage != \"underfined\") {\n    //console.log(mileageDisengage)\n    //console.log(Object.keys(mileageDisengage[0]).filter((item)=> item !== 'year').map((elem)=>elem))\n    try {\n      theKeys = mileageDisengage\n        ? Object.keys(mileageDisengage[0])\n            .filter((item) => item !== \"year\")\n            .map((elem) => elem)\n        : [];\n      theKeys = theKeys.concat(\n        Object.keys(mileageDisengage[1])\n          .filter((item) => item !== \"year\")\n          .map((elem) => elem)\n      );\n      theKeys = [...new Set(theKeys)];\n      for (let i = 0; i < theKeys.length; i++) {\n        newKeys.push({ theKey: theKeys[i], color: colorArray[i] });\n      }\n      //console.log(theKeys)\n    } catch {\n      theKeys = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(listMileageDisengage());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h2>\n        Autonomous Miles Driven{\" \"}\n        <a href=\"https://www.dmv.ca.gov/portal/vehicle-industry-services/autonomous-vehicles/\">\n          (DMV)\n        </a>\n      </h2>\n      <ResponsiveContainer width=\"95%\" height={700}>\n      <LineChart\n        // width={900}\n        height={700}\n        data={mileageDisengage ? mileageDisengage : []}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        {mileageDisengage &&\n          newKeys.map((elem) => {\n            return (\n              <Line\n                type=\"monotone\"\n                key={elem.theKey}\n                dataKey={elem.theKey}\n                stroke={elem.color}\n              />\n            );\n          })}\n      </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Mileage;\n","import React, { useEffect } from \"react\";\nimport {\n  LineChart,\n  Line,\n  YAxis,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from \"recharts\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listMileageDisengage } from \"../actions/listMileageDisengageActions\";\n\nconst Disengage = () => {\n  const dispatch = useDispatch();\n\n  const mileageDisengagementList = useSelector(\n    (state) => state.mileageDisengageList\n  );\n  const { disengagement } = mileageDisengagementList;\n\n  let theKeys = [];\n  let newKeys = [];\n  var colorArray = [\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n  ];\n  //console.log(mileageDisengage)\n  if (typeof disengagement != \"underfined\") {\n    console.log(disengagement);\n    //console.log(Object.keys(disengagement [0]).filter((item)=> item !== 'year').map((elem)=>elem))\n    try {\n      theKeys = disengagement\n        ? Object.keys(disengagement[0])\n            .filter((item) => item !== \"year\")\n            .map((elem) => elem)\n        : [];\n      theKeys = theKeys.concat(\n        Object.keys(disengagement[1])\n          .filter((item) => item !== \"year\")\n          .map((elem) => elem)\n      );\n      theKeys = [...new Set(theKeys)];\n      for (let i = 0; i < theKeys.length; i++) {\n        newKeys.push({ theKey: theKeys[i], color: colorArray[i] });\n      }\n      //console.log(theKeys)\n    } catch {\n      theKeys = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(listMileageDisengage());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h2>\n        Disengagements{\" \"}\n        <a href=\"https://www.dmv.ca.gov/portal/vehicle-industry-services/autonomous-vehicles/\">\n          (DMV)\n        </a>\n      </h2>\n      <ResponsiveContainer width=\"95%\" height={900}>\n      <LineChart\n        // width={600}\n        height={700}\n        data={disengagement ? disengagement : []}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        {disengagement &&\n          newKeys.map((elem) => {\n            return (\n              <Line\n                type=\"monotone\"\n                key={elem.theKey}\n                dataKey={elem.theKey}\n                stroke={elem.color}\n              />\n            );\n          })}\n      </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Disengage;\n","import React, { useEffect } from \"react\";\nimport {\n  LineChart,\n  Line,\n  YAxis,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer \n} from \"recharts\";\nimport \"./Screen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listMileageDisengage } from \"../actions/listMileageDisengageActions\";\nimport \"./Graphs.css\"\n\nconst MileageDisengage = () => {\n  const dispatch = useDispatch();\n\n  const mileageDisengagementList = useSelector(\n    (state) => state.mileageDisengageList\n  );\n  const { mileageDisengage, disengagement } = mileageDisengagementList;\n  //let mileage = []\n  //let [mileage, setMileage] = useState([]);\n  console.log(mileageDisengage);\n  console.log(disengagement);\n  let theKeys = [];\n  let newKeys = [];\n  let mileageDisengagements = [];\n  var colorArray = [\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n  ];\n  //console.log(mileageDisengage)\n  if (typeof disengagement != \"underfined\") {\n    console.log(disengagement);\n    //console.log(Object.keys(disengagement [0]).filter((item)=> item !== 'year').map((elem)=>elem))\n    try {\n      theKeys = disengagement\n        ? Object.keys(disengagement[0])\n            .filter((item) => item !== \"year\")\n            .map((elem) => elem)\n        : [];\n      theKeys = theKeys.concat(\n        Object.keys(disengagement[1])\n          .filter((item) => item !== \"year\")\n          .map((elem) => elem)\n      );\n      theKeys = [...new Set(theKeys)];\n      for (let i = 0; i < theKeys.length; i++) {\n        newKeys.push({ theKey: theKeys[i], color: colorArray[i] });\n\n        //console.log(tempObj)\n      }\n      //console.log(\"whhyyy\"  + newKeys)\n      // do mile/disengage\n      let tempObj = {};\n      //console.log(disengagement.length)\n      const len = disengagement.length;\n      if (\n        typeof disengagement != \"undefined\" &&\n        typeof mileageDisengage != \"undefined\"\n      ) {\n        for (let k = 0; k < len; k++) {\n          //console.log(k)\n          //tempObj = mileageDisengage[k]\n          tempObj = { year: disengagement[k].year };\n          //console.log(newKeys)\n          for (let m = 0; m < newKeys.length; m++) {\n            let milesPerDis = mileageDisengage[k][theKeys[m]] / disengagement[k][theKeys[m]];\n            if (isNaN(milesPerDis)){\n              milesPerDis = 0;\n            }\n            else{\n              milesPerDis = milesPerDis.toFixed(2)\n            }\n            tempObj[theKeys[m]] = milesPerDis\n              \n            //console.log(tempObj)\n          }\n          mileageDisengagements.push(tempObj);\n        }\n      }\n\n      //console.log(mileageDisengagements)\n      //console.log(theKeys)\n    } catch {\n      theKeys = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(listMileageDisengage());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h2>\n        {\" \"}\n        Miles per Disengagement{\" \"}\n        <a href=\"https://www.dmv.ca.gov/portal/vehicle-industry-services/autonomous-vehicles/\">\n          (DMV)\n        </a>\n      </h2>\n      <ResponsiveContainer width=\"95%\" height={700}>\n\n      <LineChart\n        // width={600}\n        height={700}\n        data={disengagement ? mileageDisengagements : []}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        {disengagement &&\n          newKeys.map((elem) => {\n            return (\n              <Line\n                type=\"monotone\"\n                key={elem.theKey}\n                dataKey={elem.theKey}\n                stroke={elem.color}\n              />\n            );\n          })}\n      </LineChart>\n      </ResponsiveContainer> \n    </div>\n  );\n};\n\nexport default MileageDisengage;\n","export const COLLISIONS_LIST_REQUEST = \"COLLISIONS_LIST_REQUEST\";\nexport const COLLISIONS_LIST_SUCCESS = \"COLLISIONS_LIST_SUCCESS\";\nexport const COLLISIONS_LIST_FAIL = \"COLLISIONS_LIST_FAIL\";","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Button, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCollisions } from \"../actions//collisionActions\";\nimport \"./Screen.css\";\nimport Loading from \"../components/Loading\";\n\nconst Collision = () => {\n  const dispatch = useDispatch();\n\n  const collisionList = useSelector((state) => state.collisionList);\n  const { loading, collisions } = collisionList;\n  const [numberOfCollisions, setNumberOfCollisions] = useState(10);\n  if (collisions) {\n    //console.log(collisions)\n  }\n  //console.log((collisions && collisions[0].participant))\n  //console.log(loading)\n\n  const showCollisionsHandler = () => {\n    let newNumberOfCollisions = numberOfCollisions == 10 ? 600 : 10;\n    setNumberOfCollisions(newNumberOfCollisions);\n  };\n  useEffect(() => {\n    dispatch(listCollisions());\n  }, [\n    dispatch,\n    // successCreate,\n    // successUpdate,\n  ]);\n  const headers = [\"Company\", \"Accident Date\", \"Description\", \"Mode\", \"Damage\"];\n  //const data = [{\"Id\":1, \"details\":{}}]\n\n  // table two\n  console.log(window.innerWidth)\n\n  return (\n    <Container fluid =\"md\">\n      <Row>\n        <h2 id=\"collision-header\">\n          Collisions Reported{\" \"}\n          <a href=\"https://www.dmv.ca.gov/portal/vehicle-industry-services/autonomous-vehicles/\">\n            (DMV)\n          </a>\n        </h2>\n        <div className=\"collisionTable\">\n          {loading && <Loading />}\n          \n\n          <Table responsive>\n            <thead>\n              <tr>\n                {headers.map((tableHeader, index) => (\n                  <th key={index}>{tableHeader}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {collisions &&\n                collisions\n                  .filter((col) => col.company !== \"\")\n                  .splice(0, numberOfCollisions)\n                  .map((col) => {\n                    return (\n                      <tr key={col._id}>\n                        <td>{col.company}</td>\n                        <td>{col.accidentDate}</td>\n                        <td >{col.description}</td>\n                        <td>{col.mode}</td>\n                        <td>{col.damage}</td>\n                      </tr>\n                    );\n                  })}\n              <tr></tr>\n            </tbody>\n          </Table>\n        </div>\n      </Row>\n      <Row>\n        <Button className=\"showMore\" onClick={() => showCollisionsHandler()}>\n          Show {numberOfCollisions === 10 ? \"More\" : \"Less\"}\n        </Button>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Collision;\n","import {\n  COLLISIONS_LIST_FAIL,\n  COLLISIONS_LIST_REQUEST,\n  COLLISIONS_LIST_SUCCESS,\n} from \"../constants/collisionsConstants\";\nimport axios from \"axios\";\n\nexport const listCollisions = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: COLLISIONS_LIST_REQUEST,\n    });\n\n    let { data } = await axios.get(`/api/collisions`);\n\n    // splice\n    //data = data.slice(0,20)\n    console.log(data);\n\n\n    // sort\n    let dataSorted = data.sort((a, b) => {\n      let aa =\n        parseInt(a.accidentDate.split(\"/\")[0]) * 30 +\n        parseInt(a.accidentDate.split(\"/\")[1]) +\n        parseInt(a.accidentDate.split(\"/\")[2].slice(-2)) * 365;\n      let bb =\n        parseInt(b.accidentDate.split(\"/\")[0]) * 30 +\n        parseInt(b.accidentDate.split(\"/\")[1]) +\n        parseInt(b.accidentDate.split(\"/\")[2].slice(-2)) * 365;\n      return bb - aa;\n    });\n    console.log(dataSorted);\n\n    dispatch({\n      type: COLLISIONS_LIST_SUCCESS,\n      payload: dataSorted,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: COLLISIONS_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\n/*\n  let sortedData = data.sort((a, b) => {\n        //const d1 = new Date('2019-06-01');\n        const ad = new Date(a.accidentDate.split('/')[2]+'-'+(a.accidentDate.split('/')[0]).length ===2?a.accidentDate.split('/')[0]: '0'+a.accidentDate.split('/')[0]+'-'+a.accidentDate.split('/')[1])\n        const bd = new Date(b.accidentDate.split('/')[2]+'-'+(a.accidentDate.split('/')[0]).length ===2?b.accidentDate.split('/')[0]: '0'+b.accidentDate.split('/')[0] +'-'+b.accidentDate.split('/')[1])\n        ad.setFullYear(parseInt(a.accidentDate.split('/')[2]));\n        bd.setFullYear(parseInt(a.accidentDate.split('/')[2]));\n        console.log(a.accidentDate)\n        console.log(ad)\n        console.log(a.accidentDate.split('/')[2]+'-'+a.accidentDate.split('/')[0]+'-'+a.accidentDate.split('/')[1])\n        console.log(\"b\")\n        console.log(b.accidentDate)\n        console.log(bd)\n        console.log(b.accidentDate.split('/')[2]+'-'+b.accidentDate.split('/')[0]+'-'+b.accidentDate.split('/')[1])\n\n        \n        return bd -ad})\n  */\n","import React, {  } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"../../components/Screen.css\";\n\n//import { useSelector } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import Mileage from \"../../components/Mileage\";\nimport Mileage from \"../../components/Mileage\";\nimport Disengage from \"../../components/Disengage\";\nimport MileageDisengage from \"../../components/MileageDisengage\";\nimport Collision from \"../../components/Collision\";\n\n\n//import \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n\n\n\n  return (\n    <Container>\n\n    <Row><Mileage/></Row>\n    <Row><Disengage/></Row>\n    <Row><MileageDisengage/></Row>\n    <Row><Collision/></Row>\n\n    </Container>\n  \n  );\n}\n\nexport default LandingPage;\n","export const TECHSTACKS_LIST_REQUEST = \"TECHSTACKS_LIST_REQUEST\";\nexport const TECHSTACKS_LIST_SUCCESS = \"TECHSTACKS_LIST_SUCCESS\";\nexport const TECHSTACKS_LIST_FAIL = \"TECHSTACKS_LIST_FAIL\";","export const SUGGESTION_CREATE_REQUEST = \"SUGGESTION_CREATE_REQUEST\";\nexport const SUGGESTION_CREATE_SUCCESS = \"SUGGESTION_CREATE_SUCCESS\";\nexport const SUGGESTION_CREATE_FAIL = \"SUGGESTION_CREATE_FAIL\";\n\nexport const SUGGESTION_UPDATE_REQUEST = \"SUGGESTION_UPDATE_REQUEST\";\nexport const SUGGESTION_UPDATE_SUCCESS = \"SUGGESTION_UPDATE_SUCCESS\";\nexport const SUGGESTION_UPDATE_FAIL = \"SUGGESTION_UPDATE_FAIL\";\n\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Form, Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSuggestionAction } from \"../actions/updateSuggestionActions\";\n// import Loading from \"./Loading\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport \"./Screen.css\";\n\nconst Suggestion = () => {\n  const dispatch = useDispatch();\n  const techStackList = useSelector((state) => state.techStackList);\n  const { techStacks } = techStackList;\n  const [type, setType] = useState(\"\");\n  const currentOption = techStacks\n    ? techStacks.find((stck) => stck.id == type)\n    : {};\n\n  const [showSuggestion, setShowSuggestion] = useState(false);\n  const [suggestionError, setSuggestionError] = useState(false);\n\n  const [participant, setParticipant] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [lidar, setLidar] = useState(\"\");\n  const [camera, setCamera] = useState(\"\");\n  const [radar, setRadar] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [compute, setCompute] = useState(\"\");\n  const [providingService, setProvidingService] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n\n  const suggestionUpdate = useSelector((state) => state.suggestions);\n  const { suggestion, loading } = suggestionUpdate;\n  const options = techStacks\n    ? techStacks.map((stack) => {\n        return {\n          option: stack.participant + \" - \" + stack.model,\n          id: stack.id,\n        };\n      })\n    : [];\n  //console.log(options);\n\n  const resetHandler = () => {\n    setParticipant(\"\");\n    setLidar(\"\");\n    setCamera(\"\");\n    setRadar(\"\");\n    setLevel(\"\");\n    setCompute(\"\");\n    setProvidingService(\"\");\n    setType(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setSuggestionError(false);\n    if (type == \"\") {\n      console.log(\"Please select an entry\");\n      setSuggestionError(true);\n      return;\n    }\n    dispatch(\n      updateSuggestionAction(\n        currentOption.id,\n        currentOption.participant,\n        currentOption.model,\n        lidar,\n        camera,\n        radar,\n        level,\n        compute,\n        providingService,\n        source\n      )\n    );\n    //if (!participant || !lidar || !category) return;\n\n    resetHandler();\n    setShowSuggestion(false);\n    //history.push(\"/mysuggestions\");\n  };\n\n  useEffect(() => {\n    //dispatch();\n    setLidar(currentOption ? currentOption.lidar.replace(\"|\", \"\\n-\") : \"\");\n    setCamera(currentOption ? currentOption.camera.replace(\"|\", \"\\n-\") : \"\");\n    setRadar(currentOption ? currentOption.radar.replace(\"|\", \"\\n-\") : \"\");\n    setLevel(currentOption ? currentOption.level.replace(\"|\", \"\\n-\") : \"\");\n    setCompute(currentOption ? currentOption.compute.replace(\"|\", \"\\n-\") : \"\");\n    setProvidingService(\n      currentOption ? currentOption.providingService.replace(\"|\", \"\\n-\") : \"\"\n    );\n  }, [\n    dispatch,\n    type,\n    // successCreate,\n    // successUpdate,\n  ]);\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Button onClick={() => setShowSuggestion(!showSuggestion)}>\n          Make a Suggestion\n        </Button>\n      </Row>\n      <Row className=\"justify-content-center\">\n        {!showSuggestion && suggestion ? (\n          <Card\n            bg=\"info\"\n            text=\"dark\"\n            style={{ width: \"18rem\" }}\n            className=\"mb-2\"\n          >\n            <Card.Body>\n              Thank you! After a review we will add your contribution.\n            </Card.Body>\n          </Card>\n        ) : (\n          <h1></h1>\n        )}\n      </Row>\n\n      <Row>\n        {showSuggestion && (\n          <Card>\n            <Card.Header>Create a new suggestion</Card.Header>\n            <Card.Body>\n              <Form onSubmit={submitHandler}>\n                {/* {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>} */}\n                <Form.Label>Select Entry</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={type}\n                  onChange={(e) => {\n                    //console.log(\"e.target.value\", e.target.value);\n                    setType(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select Entry</option>\n                  {options.map((opt) => (\n                    <option key={opt._id} value={opt.id}>\n                      {opt.option}\n                    </option>\n                  ))}\n                </Form.Control>\n\n                <Form.Group controlId=\"participant\">\n                  <Form.Label>Participant</Form.Label>\n                  <Form.Control\n                    disabled\n                    type=\"participant\"\n                    value={currentOption ? currentOption.participant : \"\"}\n                    placeholder=\"Enter the participant\"\n                    onChange={(e) => setParticipant(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"model\">\n                  <Form.Label>Model</Form.Label>\n                  <Form.Control\n                    disabled\n                    type=\"model\"\n                    value={currentOption ? currentOption.model : \"\"}\n                    placeholder=\"Enter the model\"\n                    onChange={(e) => setModel(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"lidar\">\n                  <Form.Label>Lidar</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={lidar}\n                    placeholder=\"Enter the lidar\"\n                    rows={3}\n                    onChange={(e) => setLidar(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"camera\">\n                  <Form.Label>Camera</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={camera}\n                    placeholder=\"Enter the camera\"\n                    rows={3}\n                    onChange={(e) => setCamera(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"radar\">\n                  <Form.Label>Radar</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={radar}\n                    placeholder=\"Enter the radar\"\n                    rows={3}\n                    onChange={(e) => setRadar(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"level\">\n                  <Form.Label>Level</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={level}\n                    placeholder=\"Enter the level\"\n                    rows={3}\n                    onChange={(e) => setLevel(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"compute\">\n                  <Form.Label>Compute</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={compute}\n                    placeholder=\"Enter the compute\"\n                    rows={3}\n                    onChange={(e) => setCompute(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"providingService\">\n                  <Form.Label>Providing Service</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={providingService}\n                    placeholder=\"Enter the providing service\"\n                    rows={3}\n                    onChange={(e) => setProvidingService(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"source\">\n                  <Form.Label>Source</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    value={source}\n                    placeholder=\"Enter link to the source/reference for this information\"\n                    rows={3}\n                    onChange={(e) => setSource(e.target.value)}\n                  />\n                </Form.Group>\n\n                {/* {loading && <Loading size={50} />} */}\n                {suggestionError && (\n                  <ErrorMessage>Please select an entry</ErrorMessage>\n                )}\n                <Button type=\"submit\" variant=\"primary\">\n                  Submit Suggestion\n                </Button>\n                <Button\n                  className=\"mx-2\"\n                  onClick={resetHandler}\n                  variant=\"danger\"\n                >\n                  Reset Feilds\n                </Button>\n              </Form>\n            </Card.Body>\n\n            <Card.Footer className=\"text-muted\">\n              Creating on - {new Date().toLocaleDateString()}\n            </Card.Footer>\n          </Card>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Suggestion;\n","import {\n  SUGGESTION_UPDATE_FAIL,\n  SUGGESTION_UPDATE_REQUEST,\n  SUGGESTION_UPDATE_SUCCESS,\n} from \"../constants/suggestionsConstants\";\nimport axios from \"axios\";\n\nexport const updateSuggestionAction =\n  (\n    id,\n    participant,\n    model,\n    lidar,\n    camera,\n    radar,\n    level,\n    compute,\n    providingService,\n    source\n  ) =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: SUGGESTION_UPDATE_REQUEST,\n      });\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer jsdjfk`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/suggestions/update`,\n        {\n          id,\n          participant,\n          model,\n          lidar,\n          camera,\n          radar,\n          level,\n          compute,\n          providingService,\n          suggestions: source,\n          display: false,\n        },\n        config\n      );\n\n      dispatch({\n        type: SUGGESTION_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: SUGGESTION_UPDATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Button, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listTechStacks } from \"../../actions//techStackActions\";\nimport Suggestion from \"../../components/Suggestion\";\nimport Loading from \"../../components/Loading\";\n//import \"../../components/Screen.css\";\nimport \"./TechStack.css\";\n\nfunction TechStack() {\n  const dispatch = useDispatch();\n  const techStackList = useSelector((state) => state.techStackList);\n  const { loading, techStacks } = techStackList;\n  //console.log((techStacks && techStacks[0].participant))\n  console.log(loading);\n  useEffect(() => {\n    dispatch(listTechStacks());\n  }, [dispatch]);\n  const headers = [\n    \"Participant\",\n    \"Model\",\n    \"Lidar\",\n    \"Camera\",\n    \"Radar\",\n    \"Compute\",\n    \"Level\",\n    \"Providing Service\",\n  ];\n  return (\n    <Container fluid=\"md\">\n      <h2>Technology</h2>\n      {loading && <Loading />}\n\n      <Table responsive>\n        <thead>\n          <tr>\n            {headers.map((tableHeader, index) =>\n              tableHeader === \"Lidar\" || \"Camera\" || \"Radar\" || \"Compute\" ? (\n                <th sm={4} key={index}>\n                  {tableHeader}\n                </th>\n              ) : (\n                <th key={index}>{tableHeader}</th>\n              )\n            )}\n          </tr>\n        </thead>\n\n        {techStacks &&\n          techStacks\n            .filter((f_stack) => f_stack.display)\n            .map((stack) => {\n              return (\n                <tbody>\n                  <tr key={stack._id}>\n                    <td>{stack.participant}</td>\n                    <td>{stack.model}</td>\n                    <td>\n                      {stack.lidar.trim() !== \"\"\n                        ? stack.lidar\n                            .split(\"-\")\n                            .filter((f) => f !== \"\")\n                            .map((point) => {\n                              return <li>{point.trim()}</li>;\n                            })\n                        : \"\"}\n                    </td>\n                    <td>\n                      {stack.camera.trim() !== \"\"\n                        ? stack.camera\n                            .split(\"-\")\n                            .filter((f) => f !== \"\")\n                            .map((point) => {\n                              return <li>{point.trim()}</li>;\n                            })\n                        : \"\"}\n                    </td>\n                    <td>\n                      {stack.radar.trim() !== \"\"\n                        ? stack.radar\n                            .split(\"-\")\n                            .filter((f) => f !== \"\")\n                            .map((point) => {\n                              return <li>{point.trim()}</li>;\n                            })\n                        : \"\"}\n                    </td>\n                    <td>\n                      {stack.compute.trim() !== \"\"\n                        ? stack.compute\n                            .split(\"-\")\n                            .filter((f) => f !== \"\")\n                            .map((point) => {\n                              return <li>{point.trim()}</li>;\n                            })\n                        : \"\"}\n                    </td>\n                    <td>{stack.level}</td>\n                    <td>\n                      {stack.providingService.trim() !== \"\"\n                        ? stack.providingService\n                            .split(\"-\")\n                            .filter((f) => f !== \"\")\n                            .map((point) => {\n                              return <li>{point.trim()}</li>;\n                            })\n                        : \"\"}\n                    </td>\n                  </tr>\n                </tbody>\n              );\n            })}\n      </Table>\n      <Suggestion />\n    </Container>\n  );\n}\n\nexport default TechStack;\n","import {\n  TECHSTACKS_LIST_FAIL,\n  TECHSTACKS_LIST_REQUEST,\n  TECHSTACKS_LIST_SUCCESS,\n} from \"../constants/techStacksConstants\";\nimport axios from \"axios\";\n\nexport const listTechStacks = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TECHSTACKS_LIST_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/techStacks`);\n    //console.log(\"tech stacks is \"+ data)\n    dispatch({\n      type: TECHSTACKS_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: TECHSTACKS_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport { useState } from \"react\";\nimport TechStack from \"./screens/TechStack/TechStack\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/TechSTack\" component={TechStack} />\n        {/* <Route\n          path=\"/mynotes\"\n          component={({ history }) => (\n            <MyNotes search={search} history={history} />\n          )}\n        /> */}\n\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  techStackListReducer,\n\n} from \"./reducers/techStacksReducers\";\n\nimport {\n  mileageDisengageListReducer,\n\n} from \"./reducers/mileageDisengagementReducers\";\n\nimport {\n  collisionListReducer,\n\n} from \"./reducers/collisionsReducers\";\n\nimport {\n  suggestionUpdateReducer,\n\n} from \"./reducers/suggestionReducers\";\n\nconst reducer = combineReducers({\n  techStackList: techStackListReducer,\n  collisionList: collisionListReducer,\n  mileageDisengageList: mileageDisengageListReducer,\n  suggestions : suggestionUpdateReducer\n});\n\n\nconst initialState = {\n  \n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    TECHSTACKS_LIST_FAIL,\n    TECHSTACKS_LIST_REQUEST,\n    TECHSTACKS_LIST_SUCCESS,\n  } from \"../constants/techStacksConstants\";\n  \n  export const techStackListReducer = (state = { techStacks: [] }, action) => {\n    switch (action.type) {\n      case TECHSTACKS_LIST_REQUEST:\n        return { loading: true };\n      case TECHSTACKS_LIST_SUCCESS:\n        return { loading: false, techStacks: action.payload };\n      case TECHSTACKS_LIST_FAIL:\n        return { loading: false, error: action.payload };\n  \n      default:\n        return state;\n    }\n  };\n  ","import {\n    COLLISIONS_LIST_FAIL,\n    COLLISIONS_LIST_REQUEST,\n    COLLISIONS_LIST_SUCCESS,\n  } from \"../constants/collisionsConstants\";\n  \n  export const collisionListReducer = (state = { collisions: [] }, action) => {\n    switch (action.type) {\n      case COLLISIONS_LIST_REQUEST:\n        return { loading: true };\n      case COLLISIONS_LIST_SUCCESS:\n        return { loading: false, collisions: action.payload };\n      case COLLISIONS_LIST_FAIL:\n        return { loading: false, error: action.payload };\n  \n      default:\n        return state;\n    }\n  };\n  ","//import { bindActionCreators } from \"redux\";\nimport {\n    MILEAGEDISENGAGE_LIST_FAIL,\n    MILEAGEDISENGAGE_LIST_REQUEST,\n    MILEAGEDISENGAGE_LIST_SUCCESS,\n  } from \"../constants/mileageDisengageConstants\";\n  \n  export const mileageDisengageListReducer = (state = { mileageDisengage: [] }, action) => {\n    switch (action.type) {\n      case MILEAGEDISENGAGE_LIST_REQUEST:\n        return { loading: true };\n      case MILEAGEDISENGAGE_LIST_SUCCESS:\n        return { loading: false, mileageDisengage: action.payload, disengagement: action.payloadDisengage};\n      case MILEAGEDISENGAGE_LIST_FAIL:\n        return { loading: false, error: action.payload };\n  \n      default:\n        return state;\n    }\n  };\n  ","import {\n  SUGGESTION_UPDATE_FAIL,\n  SUGGESTION_UPDATE_REQUEST,\n  SUGGESTION_UPDATE_SUCCESS,\n} from \"../constants/suggestionsConstants\";\n\n\nexport const suggestionUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SUGGESTION_UPDATE_REQUEST:\n      return { loading: true };\n    case SUGGESTION_UPDATE_SUCCESS:\n      return { loading: false, suggestion: action.payload, success: true };\n    case SUGGESTION_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}